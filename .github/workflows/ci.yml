name: Django application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  health-check-job:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with WPS
        run: |
          flake8 . --count --show-source --statistics
      - name: Check type annotations
        run: |
          mypy .
      - name: Run test
        run: |
          python manage.py test

  package-job:
    runs-on: ubuntu-latest
    needs: [health-check-job]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.prod
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: sanchos2/upravdom:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
